install:
  - cinst pester
  - ps: Install-PackageProvider -Name NuGet -Force
  - ps: Install-Module PsScriptAnalyzer -Force
  
version: '1.0.{build}'

build: false

before_test:
 - ps: |
 if($env:APPVEYOR_REPO_BRANCH -eq "master")
 {
   Write-Host "Did you commit to master branch you dummy?"
 }
 
test_script:
  - ps: |
        $ErrorActionPreference = 'Stop'
        
        Write-Host 'Adding PsScriptAnalyzer test'
        # PSScriptAnalyzer template derived from here:
        # http://theshellnut.com/integrating-psscriptanalyzer-appveyor/
        Add-AppveyorTest -Name 'PsScriptAnalyzer' -Outcome Running
        Write-Host 'Performing PSScriptAnalyzer tests'
        $Results = Get-ChildItem . -Directory -Recurse |
          Where-Object { $_.Name -ne 'Tests' } |
            Get-ChildItem -File -Include '*.ps1, *.psm1' |
              Invoke-ScriptAnalyzer -ErrorAction SilentlyContinue
        
        if ($Results) {
          Write-Host 'PSScriptAnalyzer returned errors/warnings that need to be addressed.'
          $ResultString = $Results | Out-String
          Write-Warning $ResultString
          Add-AppveyorMessage -Message "PSScriptAnalyzer output contained one or more result(s) with 'Error' severity. Check the 'Tests' tab of this build for more details." -Category Error
          Update-AppveyorTest -Name 'PsScriptAnalyzer' -Outcome Failed -ErrorMessage $ResultString
          
          throw 'Build failed'
        } else {
          Write-Host 'PSScriptAnalyzer returned nothing that needs to be addressed.'
          Update-AppveyorTest -Name 'PsScriptAnalyzer' -Outcome Passed
        }
  - ps: $res = Invoke-Pester -Path ".\Tests" -OutputFormat NUnitXml -OutputFile TestsResults.xml -PassThru
  - ps: (New-Object 'System.Net.WebClient').UploadFile("https://ci.appveyor.com/api/testresults/nunit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\TestsResults.xml))
  - ps: if ($res.FailedCount -gt 0) { throw "$($res.FailedCount) tests failed."}
